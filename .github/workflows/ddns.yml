name: DDNS Health Check and Management

on:
  workflow_dispatch:  # 允许手动触发
    inputs:
      debug:
        description: 'Enable debug mode'
        required: false
        default: 'false'

jobs:
  ddns-management:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run DDNS Health Check
      env:
        CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        CLOUDFLARE_AUTH_EMAIL: ${{ secrets.CLOUDFLARE_AUTH_EMAIL }}
        CLOUDFLARE_AUTH_KEY: ${{ secrets.CLOUDFLARE_AUTH_KEY }}
        CLOUDFLARE_DOMAIN: ${{ secrets.CLOUDFLARE_DOMAIN }}
        CLOUDFLARE_CHECK_PORT: ${{ secrets.CLOUDFLARE_CHECK_PORT }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        python ddns.py

    - name: Check if optimal IPs file exists
      id: check_ips_file
      run: |
        if [ -f "优选反代.txt" ]; then
          echo "file_exists=true" >> $GITHUB_OUTPUT
          echo "📁 优选反代文件存在"
          echo "📋 文件内容预览:"
          head -5 "优选反代.txt"
        else
          echo "file_exists=false" >> $GITHUB_OUTPUT
          echo "⚠️ 优选反代文件不存在"
        fi

    - name: Upload optimal IPs file (if exists)
      if: steps.check_ips_file.outputs.file_exists == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: optimal-ips-file
        path: 优选反代.txt
        retention-days: 7

  notify:
    runs-on: ubuntu-latest
    needs: ddns-management
    if: always()
    
    steps:
    - name: Notify completion
      run: |
        echo "✅ DDNS健康检查工作流执行完成"
        echo "📊 作业状态: ${{ needs.ddns-management.result }}"
        echo "⏰ 执行时间: $(date)"